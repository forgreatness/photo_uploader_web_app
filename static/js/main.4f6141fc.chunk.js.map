{"version":3,"sources":["App.js","index.js"],"names":["isImageUrl","require","UploadedImageContainer","props","className","onClick","removeUploadedImage","src","imagePath","alt","imageCaption","UploadImageForm","onSubmit","submitImageInfo","noValidate","htmlFor","type","id","name","placeholder","value","onChange","changeImageInfo","inputErrors","imageURL","cancelImageInfo","isSubmitError","App","handleChangeImageInfo","e","preventDefault","target","uploadedImages","state","length","setState","submitError","handleSubmitImageInfo","slice","imageInfo","concat","handleCancelImageInfo","openDialog","handleRemoveUploadedImage","i","splice","handleOpenPhotoEntryDialog","numOfUploadedImages","this","imageURLInput","imageCaptionInput","formErrors","submittedImages","openDialogButton","key","style","photoEntryDialog","contentOfDialogContainer","push","map","submittedImage","toString","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4f6141fc.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nconst isImageUrl = require('is-image-url');\r\n\r\nfunction UploadedImageContainer(props) {\r\n    return (\r\n        <div className='image-container'>\r\n            <button className='close-image-button' onClick={props.removeUploadedImage}>x</button>\r\n            <img \r\n                className='uploaded-image'  \r\n                src={props.imagePath}\r\n                alt={props.imageCaption}\r\n            />\r\n            <div className='image-caption-container'>\r\n                <b className='image-caption'>{props.imageCaption}</b>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction UploadImageForm(props) {\r\n    return (\r\n        <form className='upload-image-form' onSubmit={props.submitImageInfo} noValidate>\r\n            <ul>\r\n                <li>\r\n                    <div>\r\n                        <div>\r\n                            <label htmlFor='imageURL'>Image URL</label>\r\n                            <input type='url' id='imageURL' name='imageURL' placeholder='Enter URL' value={props.imagePath} onChange={props.changeImageInfo} noValidate/>\r\n                        </div>\r\n                        <span className='error'>{props.inputErrors.imageURL}</span>\r\n                    </div>\r\n                </li>\r\n                <li>\r\n                    <div>\r\n                        <div>\r\n                            <label htmlFor='imageCaption'>Image Caption</label>\r\n                            <input type='text' id='imageCaption' name='imageCaption' placeholder='Enter Caption' value={props.imageCaption} onChange={props.changeImageInfo} noValidate/>\r\n                        </div>\r\n                        <span className='error'>{props.inputErrors.imageCaption}</span>\r\n                    </div>\r\n                </li>\r\n                <li>\r\n                    <button type='submit'>Submit</button>\r\n                    <button type='button' onClick={props.cancelImageInfo}>Cancel</button>\r\n                </li>\r\n                <li id='form-error'>{props.isSubmitError ? 'Please make sure that both the URL and Caption are provided and meets the criteria.' : ''}</li>\r\n            </ul>\r\n        </form>\r\n    )\r\n}\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            uploadedImages: [{\r\n                imageURL: '',\r\n                imageCaption: '',\r\n            }],\r\n            submitError: false,\r\n            openDialog: false\r\n        };\r\n    }\r\n\r\n    handleChangeImageInfo = (e) => {\r\n        e.preventDefault();\r\n\r\n        const { name, value } = e.target;\r\n\r\n        let uploadedImages = this.state.uploadedImages;\r\n        uploadedImages[this.state.uploadedImages.length-1][name] = value;\r\n\r\n        this.setState({\r\n            uploadedImages: uploadedImages,\r\n            submitError: false\r\n        });\r\n    }\r\n\r\n    handleSubmitImageInfo = (e) => {\r\n        e.preventDefault();\r\n\r\n        let uploadedImages = this.state.uploadedImages.slice(0, this.state.uploadedImages.length);     \r\n        let imageInfo = this.state.uploadedImages[uploadedImages.length-1];\r\n        let submitError = !isImageUrl(imageInfo.imageURL) || imageInfo.imageCaption.length < 1;\r\n\r\n        this.setState({\r\n            uploadedImages: submitError ? uploadedImages : uploadedImages.concat([{ imageURL: '', imageCaption: '' }]),\r\n            submitError: submitError\r\n        });\r\n    }\r\n\r\n    handleCancelImageInfo = () => {\r\n        let uploadedImages = this.state.uploadedImages;\r\n        uploadedImages[uploadedImages.length-1].imageURL = '';\r\n        uploadedImages[uploadedImages.length-1].imageCaption = '';\r\n        \r\n        this.setState({\r\n            uploadedImages: uploadedImages,\r\n            submitError: false,\r\n            openDialog: false\r\n        });\r\n    }\r\n\r\n    handleRemoveUploadedImage = (i) => {\r\n        let uploadedImages = this.state.uploadedImages;\r\n        uploadedImages.splice(i,1);\r\n\r\n        this.setState({\r\n            uploadedImages: uploadedImages\r\n        });\r\n    }\r\n\r\n    handleOpenPhotoEntryDialog = () => {\r\n        this.setState({\r\n            openDialog: true\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let numOfUploadedImages = this.state.uploadedImages.length - 1;\r\n        let imageURLInput = this.state.uploadedImages[numOfUploadedImages].imageURL;\r\n        let imageCaptionInput = this.state.uploadedImages[numOfUploadedImages].imageCaption;\r\n        let formErrors = {\r\n            'imageURL': isImageUrl(imageURLInput) ? '' : 'Invalid image URL',\r\n            'imageCaption': imageCaptionInput.length > 0 ? '' : \"Caption can't be empty\"\r\n        };\r\n\r\n        let submittedImages = this.state.uploadedImages.slice(0, numOfUploadedImages);\r\n        \r\n        let openDialogButton = <button key='openDialogButton' style={{'marginBottom': '20px'}} onClick={this.handleOpenPhotoEntryDialog}>Open photo entry dialog</button>;\r\n        let photoEntryDialog = <UploadImageForm \r\n            key='photoEntryDialog'\r\n            imagePath={imageURLInput} \r\n            imageCaption={imageCaptionInput}\r\n            changeImageInfo={this.handleChangeImageInfo}\r\n            submitImageInfo={this.handleSubmitImageInfo}\r\n            cancelImageInfo={this.handleCancelImageInfo}\r\n            inputErrors={formErrors}\r\n            isSubmitError={this.state.submitError}/>;\r\n        let contentOfDialogContainer = [\r\n            openDialogButton,\r\n        ];\r\n\r\n        if (this.state.openDialog) {\r\n            contentOfDialogContainer.push(photoEntryDialog);\r\n        }\r\n\r\n        return (\r\n            <div className='main-container'>\r\n                <div className='main-left'>\r\n                    {contentOfDialogContainer}\r\n                </div>\r\n                <div className='main-right'>\r\n                    {\r\n                        submittedImages.map((submittedImage, i) => {\r\n                            return (\r\n                                <UploadedImageContainer\r\n                                    key={i.toString()}\r\n                                    imagePath={submittedImage.imageURL} \r\n                                    imageCaption={submittedImage.imageCaption} \r\n                                    removeUploadedImage={() => this.handleRemoveUploadedImage(i)}/>\r\n                            );\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}